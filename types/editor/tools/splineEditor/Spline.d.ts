import { Camera, CatmullRomCurve3, Line, Mesh, Object3D, Vector3 } from 'three';
import InspectorGroup from '@/editor/sidePanel/inspector/InspectorGroup';
export type CurveType = 'catmullrom' | 'centripetal' | 'chordal';
export default class Spline extends Object3D {
    curve: CatmullRomCurve3;
    line: Line;
    draggable: Object3D;
    curvePos: Mesh;
    tension: number;
    closed: boolean;
    subdivide: number;
    curveType: CurveType;
    offset: number;
    private lineMaterial;
    private _camera;
    private _curvePercentage;
    private _draggableScale;
    private _transform?;
    private raycaster;
    private draggedMat;
    private parentGroup;
    private group;
    constructor(name: string, camera: Camera);
    enable(): void;
    disable(): void;
    dispose: () => void;
    hideTransform: () => void;
    exportSpline: () => void;
    showPoints: (visible?: boolean) => void;
    addPoints: (defaultPoints?: Array<Vector3>) => void;
    addPoint: (position: Vector3, update?: boolean) => Mesh;
    addNextPt: () => void;
    removePoint: (child: Object3D) => void;
    removePointAt: (index: number) => void;
    removeSelectedPt: () => void;
    updateSpline: () => void;
    private onMouseClick;
    getPointAt(percentage: number): Vector3;
    getPoints(): Vector3[];
    getTangentAt(percentage: number): Vector3;
    get points(): Array<Vector3>;
    get total(): number;
    get draggableScale(): number;
    set draggableScale(value: number);
    get camera(): Camera;
    set camera(value: Camera);
    get curvePercentage(): number;
    set curvePercentage(value: number);
    private onUpdateTransform;
    initDebug(parentGroup: InspectorGroup): void;
    private debugPoint;
}
